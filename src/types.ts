/**
 * Type definitions for the net.altq.aqfile lexicon
 *
 * These types are manually maintained based on the lexicon schema to avoid
 * JSR's restriction on global type augmentations. They match the types that
 * would be generated by @atcute/lex-cli.
 *
 * @module
 */

/**
 * File checksum structure
 *
 * Represents a cryptographic hash of a file for integrity verification.
 */
export interface Checksum {
  /** Type identifier for the checksum object */
  $type?: "net.altq.aqfile#checksum";
  /**
   * Hash algorithm name (e.g., "sha256", "sha512", "blake3")
   * @maxLength 32
   */
  algo: "blake3" | "sha256" | "sha512" | string;
  /**
   * Hex or base64 encoded digest produced by the algorithm
   * @maxLength 128
   */
  hash: string;
}

/**
 * File metadata structure
 *
 * Contains information about the uploaded file including name, size,
 * MIME type, and modification timestamp.
 */
export interface File {
  /** Type identifier for the file object */
  $type?: "net.altq.aqfile#file";
  /**
   * User-visible filename
   * @maxLength 512
   */
  name: string;
  /**
   * File size in bytes
   * @minimum 0
   * @maximum 1000000000
   */
  size: number;
  /**
   * MIME type (e.g., "video/mp4", "text/plain")
   * @maxLength 255
   */
  mimeType?: string;
  /**
   * Client-side last-modified timestamp (ISO 8601 format)
   */
  modifiedAt?: string;
}

/**
 * Blob reference structure
 *
 * References an uploaded blob in the AT Protocol system.
 */
export interface BlobRef {
  /** Type identifier */
  $type: "blob";
  /** Reference to the blob */
  ref: {
    /** Link to the blob */
    $link: string;
  };
  /** MIME type of the blob */
  mimeType: string;
  /** Size of the blob in bytes */
  size: number;
}

/**
 * Main record structure for net.altq.aqfile
 *
 * This is the complete record stored in the AT Protocol repository
 * for a file upload. It includes the blob reference, file metadata,
 * optional checksum, and creation timestamp.
 */
export interface Main {
  /** Type identifier for the record */
  $type: "net.altq.aqfile";
  /**
   * The uploaded blob reference
   *
   * Note: Individual PDS instances may enforce lower size limits.
   * @accept *\/*
   * @maxSize 1000000000
   */
  blob: BlobRef;
  /**
   * Metadata about the file
   */
  file: File;
  /**
   * Optional cryptographic checksum for integrity verification
   */
  checksum?: Checksum;
  /**
   * Timestamp when this record was created (ISO 8601 format)
   */
  createdAt: string;
  /**
   * Handle or DID of the account to attribute this upload to
   */
  attribution?: string;
}

/**
 * Namespace for net.altq.aqfile types
 *
 * This provides the same structure as the generated lexicon types
 * without global augmentation.
 */
// deno-lint-ignore no-namespace
export namespace NetAltqAqfile {
  export type Checksum = {
    $type?: "net.altq.aqfile#checksum";
    algo: "blake3" | "sha256" | "sha512" | string;
    hash: string;
  };

  export type File = {
    $type?: "net.altq.aqfile#file";
    name: string;
    size: number;
    mimeType?: string;
    modifiedAt?: string;
  };

  export type BlobRef = {
    $type: "blob";
    ref: {
      $link: string;
    };
    mimeType: string;
    size: number;
  };

  export type Main = {
    $type: "net.altq.aqfile";
    blob: BlobRef;
    file: File;
    checksum?: Checksum;
    createdAt: string;
    attribution?: string;
  };
}
